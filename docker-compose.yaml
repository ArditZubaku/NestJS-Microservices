services:
  reservations:
    build:
      context: .
      dockerfile: ./apps/reservations/Dockerfile
      target: development
      #overriding the CMD command
    command: pnpm run start:dev reservations
    env_file:
      - ./apps/reservations/.env
    ports:
      - '3021:3021'
    volumes:
      - .:/usr/src/app
  auth:
    build:
      context: .
      dockerfile: ./apps/auth/Dockerfile
      target: development
    command: pnpm run start:dev auth
    env_file:
      - ./apps/auth/.env
    ports:
      - '3022:3022'
    volumes:
      - .:/usr/src/app
  payments:
    build:
      context: .
      dockerfile: ./apps/payments/Dockerfile
      target: development
    command: pnpm run start:dev payments
    env_file:
      - ./apps/payments/.env
    # Services within the same network can communicate with each other without the need to expose ports to the host machine.
    # This is an advantage of using Docker Compose and Docker's networking capabilities.
    # The services can communicate directly through the Docker network without requiring explicit port mappings on the host machine.
    # ports:
    #   - '3024:3024'
    volumes:
      - .:/usr/src/app
  notifications:
    build:
      context: .
      dockerfile: ./apps/notifications/Dockerfile
      target: development
    command: pnpm run start:dev notifications
    env_file:
      - ./apps/notifications/.env
    volumes:
      - .:/usr/src/app
  mongo:
    image: mongo
